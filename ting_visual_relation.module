<?php

/**
 * @file
 *
 * Module file for the Ting visual relation module.
 */

/**
 * Implements hook_menu().
 */
function ting_visual_relation_menu() {
	$items = array();

  $common = array(
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'ting_visual_relation.pages.inc',
  );

	$items['ting-visual-relation/get-ting-object'] = array(
		'title' => 'Get ting object',
		'page callback' => 'ting_visual_relation_get_ting_object',
	) + $common;
  $items['ting-visual-relation/get-ting-collection'] = array(
    'title' => 'Get ting collection',
    'page callback' => 'ting_visual_relation_get_ting_collection',
  ) + $common;
  $items['ting-visual-relation/get-recommendations'] = array(
    'title' => 'Get recommendations',
    'page callback' => 'ting_visual_relation_get_recommendations',
  ) + $common;
  $items['ting-visual-relation/get-availability'] = array(
    'title' => 'Get availability',
    'page callback' => 'ting_visual_relation_get_availability',
  ) + $common;
  $items['ting-visual-relation/get-search-result'] = array(
    'title' => 'Get search result',
    'page callback' => 'ting_visual_relation_get_search_result',
  ) + $common;
  $items['ting-visual-relation/get-structure'] = array(
    'title' => 'Get structure',
    'page callback' => 'ting_visual_relation_get_structure',
  ) + $common;

	return $items;
}

/**
 * Implements hook_ding_provider_user().
 */
function ting_visual_relation_ding_provider_user() {
  return array(
    'availability' => array(
      'required' => TRUE,
      'install time setup' => TRUE,
    ),
  );
}

/**
 * Implements hook_field_info().
 */
function ting_visual_relation_field_info() {
	return array(
		'ting_visual_relations' => array(
			'label' => t('Ting visual relations'),
			'description' => t('A field type that adds an acitivator for a visual relation browser.'),
			'default_widget' => 'hidden',
			'default_formatter' => 'ting_visual_relations_default',
			'no_ui' => TRUE,
		),
	);
}

/**
 * Implements hook_field_load().
 *
 * Populate the items array with the id of the entities the field is being
 * loaded on. If we didn't do this, Field API would think that the field is
 * empty and our formatters wouldn't be called.
 */
function ting_visual_relation_field_load($entity_type, $entities, $field, $instances, $langcode, &$items, $age) {
	foreach ($entities as $id => $entity) {
		$items[$id][0] = array('id' => $id);
	}
}

/**
 * Implements hook_widget_info_alter().
 *
 * We implement this hook to add our field type to the list of supported
 * fields, for the 'hidden' field widget defined in core.
 */
function ting_visual_relation_widget_info_alter(&$info) {
	if (isset($info['hidden'])) {
		$info['hidden']['field types'][] = 'ting_visual_relations';
	}
}

/**
 * Implements hook_field_formatter_info().
 */
function ting_visual_relation_field_formatter_info() {
	return array(
		'ting_visual_relations_default' => array(
			'label' => t('Default'),
			'field types' => array(
				'ting_visual_relations',
			),
		),
	);
}

/**
 * Implements hook_field_formatter_view().
 */
function ting_visual_relation_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
	$element = array();
  $d3 = libraries_load('d3');
  // file_put_contents("/home/drupalpro/debug/debug.txt", print_r($d3, TRUE), FILE_APPEND);
  if (!empty($d3['installed'])) {
  	foreach ($items as $delta => $item) {
  		$element[$delta] = array(
  			'#prefix' => '<button class="ting-visual-relations-activator">',
        '#suffix' => '</button>',
        '#markup' => t('Browse relations'),
  		);
  	}
  	// Add CSS and JS for our field:
  	$path = drupal_get_path('module', 'ting_visual_relation');
  	$element['#attached']['js'][] = $path . '/js/ting_visual_relation.field.js';
  	$element['#attached']['css'][] = $path . '/css/ting_visual_relation.field.css';
  }
  else {
    drupal_set_message(t('The visual relations field needs D3 library installed. Go to the <a href="@status">Status Page</a> for more information', array(
      '@status' => 'admin/config/status',
    )), 'error');
  }
	return $element;
}

/**
 * Implements hook_process_ting_object().
 *
 * Try to place our field on the ting object without destroying the order.
 * This is dirty, but it is needed because the hook_preprocess_ting_object()
 * in the template.php of the DDBasic theme is messing with the field_groups,
 * making it impossible to add our field at a certain place with features
 * without destroying the order.
 */
function ting_visual_relation_process_ting_object(&$vars) {
  $content = &$vars['content'];
  if (isset($content['ting_visual_relations'])) {
    $field['ting_visual_relations'] = $content['ting_visual_relations'];
    unset($content['ting_visual_relations']);
    $view_mode = $vars['elements']['#view_mode'];
    // In the standard view mode, try to place our field in the right column.
    if ($view_mode == 'full') {
      // Try to position field right after the author field.
      if (isset($content['ting-object']['content']['right_column']['ting_author'])) {
        $right_column = &$content['ting-object']['content']['right_column'];
        $author_weight = $right_column['ting_author']['#weight'];
        $fields = element_children($right_column);
        foreach ($fields as $field_name) {
          if ($right_column[$field_name]['#weight'] > $author_weight) {
            $right_column[$field_name]['#weight']++;
          }
        }
        $field['ting_visual_relations']['#weight'] = ++$author_weight;
        $right_column += $field;
      }
    }
    // TODO: Handle other view modes.
  }
}

