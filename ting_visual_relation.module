<?php

/**
 * @file
 *
 * Module file for the Ting visual relation module.
 */

// Include our feature override.
include_once 'ting_visual_relation.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 *
 * Tells panels where to find plugins.
 */
function ting_visual_relation_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_menu().
 */
function ting_visual_relation_menu() {
	$items = array();

  // Callbacks
  $common = array(
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'ting_visual_relation.pages.inc',
  );

	$items['ting-visual-relation/get-ting-object'] = array(
		'title' => 'Get ting object',
		'page callback' => 'ting_visual_relation_get_ting_object',
	) + $common;
  $items['ting-visual-relation/get-ting-collection'] = array(
    'title' => 'Get ting collection',
    'page callback' => 'ting_visual_relation_get_ting_collection',
  ) + $common;
  $items['ting-visual-relation/get-recommendations'] = array(
    'title' => 'Get recommendations',
    'page callback' => 'ting_visual_relation_get_recommendations',
  ) + $common;
  $items['ting-visual-relation/get-availability'] = array(
    'title' => 'Get availability',
    'page callback' => 'ting_visual_relation_get_availability',
  ) + $common;
  $items['ting-visual-relation/get-search-result'] = array(
    'title' => 'Get search result',
    'page callback' => 'ting_visual_relation_get_search_result',
  ) + $common;

  // Administration
  $common = array(
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'file' => 'ting_visual_relation.admin.inc',
  );

  $items['admin/config/ting/ting-visual-relation'] = array(
    'title' => 'Ting visual relation',
    'description' => 'Manage settings for the Ting visual relation module',
    'page arguments' => array('ting_visual_relation_settings_form'),
  ) + $common;
  $items['admin/config/ting/ting-visual-relation/settings'] = array(
    'title' => 'Settings',
    'description' => 'Manage basic settings for the Ting visual relation module',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/config/ting/ting-visual-relation/app-settings'] = array(
    'title' => 'App settings',
    'description' => 'Manage settings for the Visual relation app.',
    'page arguments' => array('ting_visual_relation_app_settings_form'),
    'type' => MENU_LOCAL_TASK,
  ) + $common;
  $items['admin/config/ting/ting-visual-relation/app-settings/add'] = array(
    'title' => 'Add slide',
    'description' => 'Add a slide to the Visual relation app.',
    'page arguments' => array('ting_visual_relation_add_slide_form'),
    'type' => MENU_LOCAL_ACTION,
  ) + $common;

	return $items;
}

/**
 * Implements hook_theme().
 */
function ting_visual_relation_theme() {
  return array(
    'ting_visual_relation_activation_area' => array(
      'template' => 'ting-visual-relation-activation-area',
      'variables' => array(
        // Array with activators to go in this area.
        'activators' => array(),
      ),
      'file' => 'ting_visual_relation.theme.inc',
    ),
    'ting_visual_relation_activator' => array(
      'variables' => array(
        // The type of relationbrowser (external, circular or struct)
        'type' => NULL,
        // The text to go on the button
        'text' => NULL,
        // Will only be set for external and circular
        'object' => NULL,
        // Will only be set for the struct-type relation browser
        'search' => NULL,
      ),
      'file' => 'ting_visual_relation.theme.inc',
    ),
  );
}

/**
 * Implements hook_ding_provider_user().
 */
function ting_visual_relation_ding_provider_user() {
  return array(
    'availability' => array(
      'required' => TRUE,
      'install time setup' => TRUE,
    ),
  );
}

/**
 * Implements hook_field_info().
 *
 * The field is configured as a virtual field with features without using
 * hook_ding_entity_field(). See:
 * ting_visual_relation.features.field_base.inc
 * ting_visual_relation.features.field_instance.inc
 */
function ting_visual_relation_field_info() {
	return array(
		'ting_visual_relations' => array(
			'label' => t('Ting visual relations'),
			'description' => t('A field type that adds an acitivator for a visual relation browser.'),
			'default_widget' => 'hidden',
			'default_formatter' => 'ting_visual_relations_default',
			'no_ui' => TRUE,
		),
	);
}

/**
 * Implements hook_field_load().
 *
 * Populate the items array preventing the Field API marking it as empty.
 */
function ting_visual_relation_field_load($entity_type, $entities, $field, $instances, $langcode, &$items, $age) {
	foreach ($entities as $id => $entity) {
		$items[$id][0] = array('id' => $id);
	}
}

/**
 * Implements hook_widget_info_alter().
 *
 * Adds our field type to the list of supported fields, for the 'hidden' field
 * widget defined in core.
 */
function ting_visual_relation_widget_info_alter(&$info) {
	if (isset($info['hidden'])) {
		$info['hidden']['field types'][] = 'ting_visual_relations';
	}
}

/**
 * Implements hook_field_formatter_info().
 */
function ting_visual_relation_field_formatter_info() {
	return array(
		'ting_visual_relations_default' => array(
			'label' => t('Default'),
			'field types' => array(
				'ting_visual_relations',
			),
		),
	);
}

/**
 * Implements hook_field_formatter_view().
 */
function ting_visual_relation_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
	$element = array();
  $d3 = libraries_load('d3');
  // No need to show field if D3 is not installed proberly.
  if (!empty($d3['installed']) && version_compare($d3['version'], '3.0') > 0) {
  	foreach ($items as $delta => $item) {
      $element[$delta] = array(
        '#theme' => 'ting_visual_relation_activation_area',
        '#activators' => array(),
      );
      $element[$delta]['#activators'][] = array(
        '#theme' => 'ting_visual_relation_activator',
        '#type' => 'circular',
        '#text' => t('Recommendations'),
        '#object' => $entity,
      );
      $element[$delta]['#activators'][] = array(
        '#theme' => 'ting_visual_relation_activator',
        '#type' => 'external',
        '#text' => t('Browse relations'),
        '#object' => $entity,
      );
  	}
    ting_visual_relation_prepare_render_array($element);
  }
  else {
    drupal_set_message(t('The visual relations field needs D3 version 3.0+ library installed. Go to the <a href="@status">Status Page</a> for more information', array(
      '@status' => 'admin/config/status',
    )), 'error');
  }
	return $element;
}

/**
 * Implements hook_process_ting_object().
 *
 * With certain versions of features the feature-override fails to add our
 * fields to the right-column on ting-objects. So we implement this hook to
 * make sure the field is in the right place and is not destroying the order
 * of the other fields.
 * This bug has been found in version 7.x-2.0-beta2 of features.
 */
function ting_visual_relation_process_ting_object(&$vars) {
  $content = &$vars['content'];
  // If 'field_ting_visual_relations' is set the feature failed to place our
  // field on install.
  if (isset($content['field_ting_visual_relations']) && isset($content['ting-object']['content']['right_column'])) {
    $field['field_ting_visual_relations'] = $content['field_ting_visual_relations'];
    unset($content['field_ting_visual_relations']);
    $content['ting-object']['content']['right_column'] += $field;
  }
}

/**
 * Prepares a render-array for a Ting visual relation activation area with the
 * needed Javascript and CSS.
 */
function ting_visual_relation_prepare_render_array(&$render_array) {
  // Pass the API- and log-URL to javascript as a setting.
  global $base_url;
  $api_url = $base_url . '/ting-visual-relation';
  $log_url = 'http://relvis.solsort.com/_relvis_log.js';
  $render_array['#attached']['js'][] = array(
    'data' => array(
      'tingVisualRelation' => array(
        'apiUrl' => $api_url,
        'logUrl' => $log_url,
      ),
    ),
    'type' => 'setting',
  );
  $path = drupal_get_path('module', 'ting_visual_relation');
  $render_array['#attached']['js'][] = $path . '/js/ting_visual_relation.relvis.min.js';
  $render_array['#attached']['js'][] = $path . '/js/ting_visual_relation.js';
  $render_array['#attached']['css'][] = $path . '/css/ting_visual_relation.base.css';
  $render_array['#attached']['css'][] = $path . '/css/ting_visual_relation.theme.css';
}

/**
 * Wrapper function to hold the different types of relation browsers.
 */
function ting_visual_relation_types() {
  return array(
    'external' => t('External'),
    'circular' => t('Circular'),
    'search' => t('Search'),
  );
}
